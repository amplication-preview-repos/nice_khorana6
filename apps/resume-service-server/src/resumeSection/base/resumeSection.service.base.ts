/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ResumeSection as PrismaResumeSection,
  User as PrismaUser,
} from "@prisma/client";

export class ResumeSectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ResumeSectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.resumeSection.count(args);
  }

  async resumeSections(
    args: Prisma.ResumeSectionFindManyArgs
  ): Promise<PrismaResumeSection[]> {
    return this.prisma.resumeSection.findMany(args);
  }
  async resumeSection(
    args: Prisma.ResumeSectionFindUniqueArgs
  ): Promise<PrismaResumeSection | null> {
    return this.prisma.resumeSection.findUnique(args);
  }
  async createResumeSection(
    args: Prisma.ResumeSectionCreateArgs
  ): Promise<PrismaResumeSection> {
    return this.prisma.resumeSection.create(args);
  }
  async updateResumeSection(
    args: Prisma.ResumeSectionUpdateArgs
  ): Promise<PrismaResumeSection> {
    return this.prisma.resumeSection.update(args);
  }
  async deleteResumeSection(
    args: Prisma.ResumeSectionDeleteArgs
  ): Promise<PrismaResumeSection> {
    return this.prisma.resumeSection.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.resumeSection
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
